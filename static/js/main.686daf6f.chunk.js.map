{"version":3,"sources":["styles/global.js","components/Main/styles.js","components/Main/index.jsx","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","StyledContainer","styled","div","Main","buttons","useState","selectedIndex","setSelectedIndex","bill","setBill","numberOfPeople","setNumberOfPeople","percentage","setPercentage","currency","Intl","NumberFormat","style","className","type","placeholder","onChange","event","target","value","map","button","i","onClick","handleSelectedIndex","defaultValue","format","Number","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAGaA,EAAcC,YAAH,wyB,OCCXC,EAAkBC,IAAOC,IAAV,oqI,OCArB,SAASC,IAEZ,IAAMC,EAAU,CAAC,IAAK,KAAM,KAAM,KAAM,MACxC,EAA0CC,mBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAwBF,mBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA4CJ,mBAAS,GAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAAoCN,mBAAS,IAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KAQIC,EAAW,IAAIC,KAAKC,aAAa,QAAS,CAC1CC,MAAO,WACPH,SAAU,QAId,OAEI,eAACd,EAAD,WACI,uCAAS,uBAAT,UACA,sBAAKkB,UAAU,YAAf,UACI,oBAAIA,UAAU,cAAd,mBACA,uBAAOA,UAAU,YAAYC,KAAK,SAASC,YAAY,IAAIC,SAAU,SAACC,GAAD,OAAWb,EAAQa,EAAMC,OAAOC,UACrG,2CAEA,sBAAKN,UAAU,UAAf,UAEQd,EAAQqB,KAAI,SAACC,EAAQC,GACjB,OACI,yBAAQC,QAAS,kBAxBjB,SAACD,EAAGf,GAC5BL,EAAiBoB,GACjBd,EAAcD,GAsBiCiB,CAAoBF,EAAGvB,EAAQuB,KAAKT,UAAWZ,IAAkBqB,EAAI,SAAU,GAAtG,UACKD,EADL,UAMZ,uBAAOP,KAAK,SAASD,UAAU,SAASE,YAAY,gBAAgBC,SAAU,SAACC,GAAD,OAAWT,EAAcS,EAAMC,OAAOC,aAGxH,0BAASN,UAAU,cAAnB,UACI,oBAAIA,UAAU,cAAd,kCACA,uBAAOY,aAAa,IAAIX,KAAK,SAASC,YAAY,OAAOC,SAAU,SAACC,GAAD,OAAWX,EAAkBW,EAAMC,OAAOC,aAGjH,sBAAKN,UAAU,SAAf,UACI,oCACI,qBAAIA,UAAU,cAAd,oBACI,+CAEJ,8BAAMV,GAAQE,EAAiB,OAASI,EAASiB,OAAQvB,GAAQwB,OAAOpB,GAAY,KAAQF,QAGhG,oCACI,uCACI,+CAEJ,8BAAMF,GAAQE,EAAiB,OAASI,EAASiB,OAAQvB,EAAOE,EAAoBF,GAAQwB,OAAOpB,GAAY,KAAKF,QAExH,wBAAQQ,UAAU,QAAlB,4BCpDLe,MAVf,WACE,OACE,qCACA,cAAC9B,EAAD,IACA,cAACL,EAAD,QCHJoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.686daf6f.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\"\n\n\nexport const GlobalStyle = createGlobalStyle`\n:root{\n    --background: #c5e4e7;\n    --strong-cyan: hsl(172, 67%, 45%);\n    --darker-cyan: hsl(183, 100%, 15%);\n    --grayish-cyan-500: #5e7a7d;\n    --grayish-cyan-450: hsl(185, 41%, 84%); \n    --grayish-cyan-200: hsl(189, 41%, 97%);\n}\n\n*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    \n}\n\n\nhtml{\n    @media(max-width: 1080px) {\n        font-size: 93.75%;\n    }\n\n    @media(max-width: 720px){\n        font-size: 87.5%;\n    }\n\n    @media(max-width: 340px){\n        font-size: 82.5%\n    }\n}\n\n\nbody{\n    font-family: sans-serif;\n    width: calc(100vw - (100vw - 100%));\n}\n\n\nh1, h2, h3, h4, h5, h6 {\n    font-weight: 600;\n}\n\nbutton{\n    cursor: pointer\n}\n\n[disabled]{\n    opacity: 0.6;\n    cursor: not-allowed\n}\n\n\n`","import styled from \"styled-components\";\n\n\n\nexport const StyledContainer = styled.div`\n    min-height: 100vh;\n    background: var(--background);\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    color: darkcyan;\n\n    @media(min-width: 420px){\n        justify-content: center;\n    }\n    \n\n    h1{\n        margin-top: 2rem;\n    }\n    input{\n        color: darkcyan;\n        font-weight: bold;\n    };\n    \n    .inputTitles{\n        @media(min-width: 420px){\n            grid-column-end: 1;\n            grid-column-start: 1;\n            \n        }\n    }\n\n    .peopleInput{\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n\n        @media(min-width: 420px){\n            grid-column-end: 1;\n            grid-column-start: 1;\n            margin-bottom: 10rem;\n        }\n        \n    }\n\n    .billInput{\n        @media(min-width: 420px){\n            grid-column-end: 1;\n            grid-column-start: 1;\n        }\n    }\n\n    .dashboard{\n        min-height: 85vh;\n        width: 90vw;\n        background: #ffffff;\n        border-radius: 2rem;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        margin-top: 2rem;\n\n        @media(min-width: 420px){\n            position: relative;\n            display: grid;\n            grid-template-columns: 1.5fr 1fr;\n            width: 70vw;\n            height: 70vh;\n            place-items: center;\n            \n        }\n        \n\n        .custom{\n            width: 100%;\n        }\n\n        .buttons{\n            width: 80%;\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            grid-template-rows: 1fr 1fr 1fr;\n            grid-gap: 1rem;\n            margin-top: 0.5rem;\n            @media(min-width: 420px){\n                grid-column-end: 1;\n                grid-column-start: 1;\n                margin: 0;\n            }\n            \n        }\n        .active{\n            background: darkcyan;\n        }\n\n        button{\n            width: 100%;\n            padding: 1rem;\n            background: var(--darker-cyan);\n            border-radius: 0.5rem;\n            color: white;\n            font-weight: bold;\n            font-size: 1.5rem;\n            border: none;\n            transition: all 0.3s;\n            &:hover{\n                filter: brightness(1.2);\n            }\n        }\n        \n        input{\n            width: 80%;\n            padding: 1rem;\n            border-radius: 0.5rem;\n            background: var(--grayish-cyan-450);\n            border: none\n        }\n\n        h2{\n\n            width: 80%;\n            align-items: left;\n            margin-top: 1.5rem;\n            \n            @media(min-width: 420px){\n                grid-column-end: 1;\n                grid-column-start: 1;\n            }\n\n        }\n    \n    }\n\n    .result{\n        position: relative;\n        background: var(--darker-cyan);\n        width: 80%;\n        min-height: 30vh;\n        margin: 2rem 0rem;\n        border-radius: 1rem;\n        display: flex;\n        flex-direction: column;\n        padding: 2rem;\n        justify-content: space-between;\n\n        @media(min-width: 420px){\n            grid-column-end: 2;\n            grid-column-start: 2;\n            place-content: space-evenly;\n            height: 50vh;\n            position: absolute;\n            margin: auto;\n        }\n        \n        button{\n            background: darkcyan;\n        }\n\n        section{\n            width: 100%;\n            display: flex;\n            justify-content: space-between;\n\n            h1{\n                color: var(--strong-cyan);\n                font-size: 2rem;\n                margin: 0;\n            }\n\n\n            h2{\n                display: flex;\n                flex-direction: column;\n                color: white;\n                font-weight: normal;\n                margin-top: 0;\n                \n            }\n            span{\n                font-weight: bold;\n                font-size: 1rem;\n                color: var(--grayish-cyan-500)\n            }\n        }\n        \n    }    \n`","import React, { useState } from \"react\";\nimport { StyledContainer } from \"./styles\";\n\n\nexport function Main() {\n\n    const buttons = [\"5\", \"10\", \"15\", \"25\", \"50\"]\n    const [selectedIndex, setSelectedIndex] = useState(6)\n    const [bill, setBill] = useState(0);\n    const [numberOfPeople, setNumberOfPeople] = useState(1) \n    const [percentage, setPercentage] = useState(\"\")\n    \n    \n    const handleSelectedIndex = (i, percentage) => {\n        setSelectedIndex(i)\n        setPercentage(percentage)\n    };\n\n    var currency = new Intl.NumberFormat('pt-BR', {\n        style: 'currency',\n        currency: 'BRL',\n      });\n\n\n    return(\n\n        <StyledContainer>\n            <h1>SPLI <br />TTER</h1>\n            <div className=\"dashboard\">\n                <h2 className=\"inputTitles\">Conta</h2>\n                <input className=\"billInput\" type=\"number\" placeholder=\"$\" onChange={(event) => setBill(event.target.value)}/>\n                <h2>Gorjeta %</h2>\n                \n                <div className=\"buttons\">\n                    {\n                        buttons.map((button, i) => {\n                            return(\n                                <button onClick={() => handleSelectedIndex(i, buttons[i])} className={selectedIndex === i ? \"active\": \"\"}>\n                                    {button}%\n                                </button>\n                            )\n                        })\n                    }\n                    <input type=\"number\" className=\"custom\" placeholder=\"Personalizado\" onChange={(event) => setPercentage(event.target.value)}/>\n                </div>\n\n                <section className=\"peopleInput\">\n                    <h2 className=\"inputTitles\">NÃºmero de pessoas</h2>\n                    <input defaultValue=\"1\" type=\"number\" placeholder=\"icon\" onChange={(event) => setNumberOfPeople(event.target.value)}/>\n                </section>\n\n                <div className=\"result\">\n                    <section>\n                        <h2 className=\"inputTitles\">Gorjeta\n                            <span>/ pessoa</span>\n                        </h2>\n                        <h1>{!bill | !numberOfPeople ? \"R$ 0\" : currency.format((bill * (Number(percentage)/100)) / numberOfPeople)}</h1>\n                    </section>\n\n                    <section>\n                        <h2>Total\n                            <span>/ pessoa</span>\n                        </h2>\n                        <h1>{!bill | !numberOfPeople ? \"R$ 0\" : currency.format((bill / numberOfPeople) + ((bill * (Number(percentage)/100)/numberOfPeople)))}</h1>\n                    </section>\n                    <button className=\"reset\">RESET</button>\n                </div>\n            </div>\n            \n        </StyledContainer>\n\n\n    )\n}","import { GlobalStyle } from './styles/global';\nimport { Main } from './components/Main';\n\nfunction App() {\n  return (\n    <>\n    <Main></Main>\n    <GlobalStyle/>\n  \n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}